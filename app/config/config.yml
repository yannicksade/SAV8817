imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    value1: 80
    value2: 20 #value use in the test of my core bundle
    images_url: dashboard/assets/entity/images
    docs_url: dashboard/assets/brochure/files
    resolve_images_url: 'http://localhost/SAV8817.git/web/app_dev.php/media/cache/resolve/basic_filter600x600/%images_url%'
    basic_filter: "basic_filter600x600"

framework:
    validation:  { enable_annotations: true }

    #esi:             ~
    translator:      ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
   #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

assetic:
    debug: '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"

# disable use_username_form_type; don't use  the fos form type and remove them from the container
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: APM\UserBundle\Entity\Utilisateur
    service:
        user_manager: pugx_user_manager
        mailer: fos_user.mailer.twig_swift
    use_username_form_type: true
    from_email:
        address:           webmaster@esay-trade.com
        sender_name:       webmaster
    registration:
        confirmation:
            enabled: false
            from_email:
                address:     registration@esay-trade.com
                sender_name: Easy Trade Team
            template:   '@FOSUser/Registration/email.txt.twig'
    resetting:
        email:
            from_email:
                address:    resetting-password@esay-trade.com
                sender_name: Easy Trade Team
            template:   '@FOSUser/Resetting/email.txt.twig'

# Configuratio de PUGXMultiuserBundle pour  utilisateur-avm et admin
pugx_multi_user:
    users:
        utilisateur_avm:
            entity:
                class: APM\UserBundle\Entity\Utilisateur_avm
#          factory:
            registration:
                form:
                    type: APM\UserBundle\Form\Type\Utilisateur_avmType
                    name: apm_utilisateur_avm_registration
                    validation_groups:  [Registration, Default]
                template: FOSUserBundle:Registration:utilisateur_avm.form.html.twig
            profile:
                form:
                    type: APM\UserBundle\Form\Type\ProfileUtilisateur_avmFormType
                    name: apm_utilisateur_avm_profile
                    validation_groups:  [Profile, Default]
                template: FOSUserBundle:profile:utilisateur_avm.form.html.twig
        admin:
            entity:
                class: APM\UserBundle\Entity\Admin
            #      factory:
            registration:
                 form:
                     type: APM\UserBundle\Form\Type\RegistrationAdminFormType
                     name: apm_admin_registration
                     validation_groups:  [Registration, Default]
                 template: FOSUserBundle:Registration:admin.form.html.twig
            profile:
                 form:
                     type: APM\UserBundle\Form\Type\ProfileAdminFormType
                     name: apm_admin_profile
                     validation_groups:  [Profile, Default]
                 template: FOSUserBundle:profile:admin.form.html.twig

web_profiler :
    intercept_redirects : false

vich_uploader:
    db_driver: orm # or mongodb or propel or phpcr
    mappings:
        entity_images:
            uri_prefix:         "%images_url%"
            upload_destination: '%kernel.root_dir%/../web/%images_url%'
            namer:               vich_uploader.namer_uniqid

        brochures:
            uri_prefix:         "%docs_url%"
            upload_destination: '%kernel.root_dir%/../web/%docs_url%'
            namer:              vich_uploader.namer_uniqid

liip_imagine :
    # configure resolvers
    resolvers :
        # setup the default resolver
        default :
            # use the default web path
            web_path : ~
    # your filter sets are defined here
    filter_sets :
        # use the default cache configuration
        cache : ~
        basic_filter600x600 :
# adjust the image quality to 75%
            #quality : 75
 # list of transformations to apply (the "filters")
            #filters
 # use and setup the "crop" filter
                #crop:

                    # set the size of the cropping area
                    #size: [600, 514 ]

                    # set the starting coordinates of the crop
                    #start: [ %_x_%, %_y_% ]


apm_achat:
    nombre1: "%value1%"
    nombre2: "%value2%"